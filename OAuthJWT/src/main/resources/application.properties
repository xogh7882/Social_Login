server.port=8080

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}


spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# JWT? ??? ???? ??? ? ???? ??? ( ??? ?????, ????,??, ???? ?? ???? ?? ???? ???? )
spring.jwt.secret=vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb


#registration
# ?????? ??
spring.security.oauth2.client.registration.naver.client-name=naver
# naver ??? ???? ???? Application ID
spring.security.oauth2.client.registration.naver.client-id=${NAVER_ID}
# naver ??? ???? ?? ?? Application ???
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_SECRET}
# ?? ? naver? ?????? URI
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
# OAuth2.0 ? ?? ??
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# naver?? ??? ??? ??? ?? ( ??, ??? )
spring.security.oauth2.client.registration.naver.scope=name,email

#provider ( ??? OAuth API ?? ??? ?? ??? ? = ?? X )
# ??? ?? ??? ?? ????? ??
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# ?? ??? ??? ???? ???? ????? ??
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# ?? ? ??? ??? ??? ????? ??
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# ??? ?? ???? ??? ??? ???? ??? ??
spring.security.oauth2.client.provider.naver.user-name-attribute=response


#registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email



#registration
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_ID}
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=email

#provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kaako.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=	https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=response